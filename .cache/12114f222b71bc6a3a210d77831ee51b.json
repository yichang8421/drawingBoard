{"dependencies":[{"name":"./style.css","dynamic":true}],"generated":{"html":"<!doctype html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>画板</title>\n    <link rel=\"stylesheet\" href=\"/style.19fe30e1.css\">\n</head>\n<body>\n<canvas id=\"canvas\" width=\"100\" height=\"100\"></canvas>\n<script>\n    let canvas = document.getElementById('canvas');\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n\n    let ctx = canvas.getContext('2d');\n    ctx.strokeStyle = \"red\";\n    ctx.fillStyle = \"red\";\n    ctx.lineWidth = 10;\n    ctx.lineJoin = 'round';\n    // ctx.lineCap = 'round';\n\n    // drowline(0,0,300,300);\n    // drowline(300,300,400,200);\n\n    //检测当前设备是否支持触屏\n    let isTouchDevice = 'ontouchstart' in document.documentElement;\n    console.log(isTouchDevice);\n\n    let painting = false;\n    let last;\n\n    function drowline(x1, y1, x2, y2) {\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.closePath();\n        ctx.stroke();\n    }\n\n    if (isTouchDevice) {\n        // 触屏设备\n        console.log('触屏设备');\n        canvas.ontouchstart=(e)=>{\n            let x = e.touches[0].clientX;\n            let y = e.touches[0].clientY;\n            last=[x,y];\n        }\n\n        canvas.ontouchmove = (e) => {\n            let x = e.touches[0].clientX;\n            let y = e.touches[0].clientY;\n            // console.log(x, y);\n            // ctx.beginPath();\n            // ctx.arc(x, y, 5, 0, 2 * Math.PI);\n            // // 描边\n            // // ctx.stroke();\n            // ctx.fill();\n\n            drowline(last[0], last[1], x, y);\n            last = [x,y];\n        }\n    } else {\n        // 非触屏设备\n        canvas.onmousedown = (e) => {\n            painting = true;\n            last = [e.clientX, e.clientY];\n        }\n\n        canvas.onmousemove = (e) => {\n            if (painting) {\n                // ctx.beginPath();\n                // ctx.arc(e.clientX, e.clientY, 5, 0, 2 * Math.PI);\n                // // 描边\n                // // ctx.stroke();\n                // ctx.fill();\n                drowline(last[0], last[1], e.clientX, e.clientY);\n            }\n            last = [e.clientX, e.clientY];\n        }\n\n        canvas.onmouseup = () => {\n            painting = false;\n        }\n    }\n</script>\n</body>\n</html>"},"hash":"bc8e02c9e6640168368341aa91022159","cacheData":{}}